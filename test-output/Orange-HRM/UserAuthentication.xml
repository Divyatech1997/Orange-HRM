<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="24" hostname="Divya" failures="3" tests="3" name="UserAuthentication" time="31.871" errors="0" timestamp="2024-07-21T20:41:32 IST">
  <testcase classname="com.testCase.in.OHRM_TCL_001" name="userLogin" time="0.0">
    <failure type="org.testng.TestNGException" message="
Method public void com.testCase.in.OHRM_TCL_001.userLogin(java.lang.String,java.lang.String) throws java.lang.InterruptedException requires a @DataProvider named : login0 in class com.fileUtils.in.ReadExcelData">
      <![CDATA[org.testng.TestNGException: 
Method public void com.testCase.in.OHRM_TCL_001.userLogin(java.lang.String,java.lang.String) throws java.lang.InterruptedException requires a @DataProvider named : login0 in class com.fileUtils.in.ReadExcelData
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 24 stack frames]]>
    </failure>
  </testcase> <!-- userLogin -->
  <testcase classname="com.testCase.in.OHRM_TCL_002" name="userLogin" time="0.0">
    <failure type="org.testng.TestNGException" message="
Found two providers called &amp;apos;login1&amp;apos; on class com.fileUtils.in.ReadExcelData">
      <![CDATA[org.testng.TestNGException: 
Found two providers called 'login1' on class com.fileUtils.in.ReadExcelData
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 25 stack frames]]>
    </failure>
  </testcase> <!-- userLogin -->
  <testcase classname="com.testCase.in.OHRM_TCL_003" name="userLogin" time="9.199">
    <failure type="java.lang.AssertionError" message="expected [Invalid Credentials] but found [Invalid credentials]">
      <![CDATA[java.lang.AssertionError: expected [Invalid Credentials] but found [Invalid credentials]
at com.testCase.in.OHRM_TCL_003.userLogin(OHRM_TCL_003.java:21)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 33 stack frames]]>
    </failure>
  </testcase> <!-- userLogin -->
  <testcase classname="com.standardClass.in.BaseTest" name="@BeforeTest extentReportSetup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest extentReportSetup -->
  <testcase classname="com.standardClass.in.BaseTest" name="@BeforeTest extentReportSetup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest extentReportSetup -->
  <testcase classname="com.standardClass.in.BaseTest" name="@BeforeTest extentReportSetup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest extentReportSetup -->
  <testcase classname="com.standardClass.in.BaseTest" name="@BeforeTest extentReportSetup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest extentReportSetup -->
  <testcase classname="com.standardClass.in.BaseTest" name="@AfterTest extentClose" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest extentClose -->
  <testcase classname="com.standardClass.in.BaseTest" name="@AfterTest extentClose" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest extentClose -->
  <testcase classname="com.standardClass.in.BaseTest" name="@AfterTest extentClose" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest extentClose -->
  <testcase classname="com.standardClass.in.BaseTest" name="@BeforeTest extentReportSetup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest extentReportSetup -->
  <testcase classname="com.standardClass.in.BaseTest" name="@BeforeTest extentReportSetup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest extentReportSetup -->
  <testcase classname="com.standardClass.in.BaseTest" name="@AfterTest extentClose" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest extentClose -->
  <testcase classname="com.standardClass.in.BaseTest" name="@AfterTest extentClose" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest extentClose -->
  <testcase classname="com.standardClass.in.BaseTest" name="@BeforeTest extentReportSetup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest extentReportSetup -->
  <testcase classname="com.standardClass.in.BaseTest" name="@AfterTest extentClose" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest extentClose -->
  <testcase classname="com.standardClass.in.BaseTest" name="@AfterTest extentClose" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest extentClose -->
  <testcase classname="com.standardClass.in.BaseTest" name="@AfterTest extentClose" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest extentClose -->
  <testcase classname="com.standardClass.in.BaseTest" name="@BeforeTest extentReportSetup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest extentReportSetup -->
  <testcase classname="com.standardClass.in.BaseTest" name="@BeforeTest extentReportSetup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest extentReportSetup -->
  <testcase classname="com.standardClass.in.BaseTest" name="@BeforeTest extentReportSetup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest extentReportSetup -->
  <testcase classname="com.standardClass.in.BaseTest" name="@AfterTest extentClose" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest extentClose -->
  <testcase classname="com.standardClass.in.BaseTest" name="@BeforeTest extentReportSetup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest extentReportSetup -->
  <testcase classname="com.standardClass.in.BaseTest" name="@AfterTest extentClose" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest extentClose -->
  <testcase classname="com.standardClass.in.BaseTest" name="@AfterTest extentClose" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest extentClose -->
  <testcase classname="com.standardClass.in.BaseTest" name="@BeforeTest extentReportSetup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest extentReportSetup -->
  <testcase classname="com.standardClass.in.BaseTest" name="@AfterTest extentClose" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest extentClose -->
</testsuite> <!-- UserAuthentication -->
